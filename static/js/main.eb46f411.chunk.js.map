{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","style","height","alert","class","type","role","message","Navbar","className","mode","href","title","id","onChange","toggleMode","htmlFor","Textform","useState","text","setText","placeholder","value","event","target","rows","backgroundColor","color","onClick","newtext","toUpperCase","showAlert","disabled","length","toLowerCase","split","map","word","charAt","slice","join","document","getElementById","select","execCommand","getSelection","removeAllRanges","filter","e","App","setMode","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eb46f411.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div class={`alert alert-${props.alert.type}`} role=\"alert\">\r\n          <strong>{props.alert.message}</strong>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                About\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onChange={props.toggleMode}\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const [text, setText] = useState(\"\");\r\n  //const [count, setCount] = useState(0);\r\n\r\n  const handleUpperCase = () => {\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Converted to Upper Case\", \"success\");\r\n  };\r\n\r\n  const handleLowerCase = () => {\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Converted to Lower Case\", \"success\");\r\n  };\r\n\r\n  const handletitleCase = () => {\r\n    let newtext = text\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .map((word) =>\r\n        word.length > 2 ? word.charAt(0).toUpperCase() + word.slice(1) : word\r\n      );\r\n    setText(newtext.join(\" \"));\r\n    props.showAlert(\"Converted to Title Case\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpace = () => {\r\n    let newtext = text.split(\" \");\r\n    setText(newtext.filter((e) => e).join(\" \"));\r\n    props.showAlert(\"Removed Extra Spaces\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    var texts = document.getElementById(\"mybox\");\r\n    texts.select();\r\n    document.execCommand(\"copy\");\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Copied to Clipboard\", \"success\");\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setText(\"\");\r\n    //setCount(0);\r\n    props.showAlert(\"Text cleared\", \"success\");\r\n  };\r\n\r\n  const handleonChange = (event) => {\r\n    setText(event.target.value);\r\n    //setCount(event.target.value.split(\" \").length);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-3\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            placeholder=\"Write Text here...\"\r\n            value={text}\r\n            onChange={handleonChange}\r\n            id=\"mybox\"\r\n            rows=\"6\"\r\n            style={{\r\n              backgroundColor:\r\n                props.mode === \"light\" ? \"white\" : \"rgb(141 171 158)\",\r\n              color: props.mode === \"light\" ? \"black\" : \"white\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleUpperCase}\r\n          disabled={text.length === 0}\r\n        >\r\n          toUpperCase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleLowerCase}\r\n          disabled={text.length === 0}\r\n        >\r\n          toLowerCase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handletitleCase}\r\n          disabled={text.length === 0}\r\n        >\r\n          toTiltleCase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleCopy}\r\n          disabled={text.length === 0}\r\n        >\r\n          Copy\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleExtraSpace}\r\n          disabled={text.length === 0}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button\r\n          className=\"btn btn-danger mx-2 my-1\"\r\n          onClick={handleClear}\r\n          disabled={text.length === 0}\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-5\">\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.split(/\\s+/).filter((e) => e.length !== 0).length} Words and{\" \"}\r\n          {text.length} Characters\r\n        </p>\r\n        <p>{text.length > 0 ? text : \"Nothing to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport About from \"./Components/About\";\nimport Alert from \"./Components/Alert\";\nimport Navbar from \"./Components/Navbar\";\nimport Textform from \"./Components/Textform\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Lightmode has been enabled :)\", \"success\");\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#33506d\";\n      document.body.style.color = \"white\";\n      showAlert(\"Darkmode has been enabled :)\", \"success\");\n    }\n  };\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n\n  return (\n    <>\n      <Navbar title=\"Text Utils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n\n      <Textform\n        title=\"Enter the Text to analyze: \"\n        mode={mode}\n        showAlert={showAlert}\n      />\n\n      {/* <div className=\"container my-3\">\n        <About mode={mode} />\n      </div> */}\n\n      <div className=\"container my-5 f\">\n        <footer>\n          <p id=\"footer\">© 2021 Skull</p>\n        </footer>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}